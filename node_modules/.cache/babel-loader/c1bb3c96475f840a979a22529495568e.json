{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useStateValue } from \"./StateContext\";\n\nfunction useMethods() {\n  _s();\n\n  const owner_base_url = \"http://localhost:8000/owner\";\n  const auth_base_url = \"http://localhost:8000/auth\";\n  const cart_base_url = \"http://localhost:8000/cart\";\n  const category_base_url = \"http://localhost:8000/category\";\n  const order_base_url = \"http://localhost:8000/order\";\n  const [state, dispatch] = useStateValue();\n  const navigate = useNavigate(); ////======================================\n  ////======================================\n\n  const login = (data, pathname) => {\n    const {\n      email,\n      password\n    } = data;\n    axios.post(pathname == \"/login\" ? `${auth_base_url}/login` : `${owner_base_url}/owner-login`, {\n      email,\n      password\n    }).then(response => {\n      if (!response.data.token) return alert(\"Password doesn't match!\");\n\n      if (pathname == \"/login\") {\n        const {\n          user,\n          token,\n          carts,\n          order\n        } = response.data;\n        dispatch({\n          type: \"ADD_USER\",\n          user\n        });\n        dispatch({\n          type: \"ADD_TOKEN\",\n          token\n        });\n        dispatch({\n          type: \"ADD_CARTS\",\n          carts\n        });\n        dispatch({\n          type: \"ADD_ORDER\",\n          order\n        });\n        sessionStorage.setItem(\"user\", JSON.stringify(user));\n        sessionStorage.setItem(\"token\", token);\n        return navigate(\"/\");\n      } else {\n        const {\n          token,\n          owner,\n          orders\n        } = response.data;\n        dispatch({\n          type: \"ADD_OWNER\",\n          owner: { ...owner,\n            orders\n          }\n        });\n        dispatch({\n          type: \"ADD_OWNER_TOKEN\",\n          owner_token: token\n        });\n        sessionStorage.setItem(\"owner\", JSON.stringify(owner));\n        sessionStorage.setItem(\"owner_token\", token);\n        return navigate(\"/owner-dashboard\");\n      }\n    }).catch(error => {\n      return alert(error);\n    });\n  }; ////======================================\n  ////======================================\n\n\n  const signup = data => {\n    axios.post(`${auth_base_url}/signup`, { ...data\n    }).then(response => {\n      var _response$data, _response$data2;\n\n      if (response.status !== 200) return alert(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.error));\n      navigate(\"/login\");\n      return;\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  const logout = () => {\n    dispatch({\n      type: \"DELETE_EVERYTHING\"\n    });\n    sessionStorage.clear();\n    return navigate(\"/\");\n  }; ////======================================\n  ////======================================\n\n\n  const get_category_list = () => {\n    axios.get(`${category_base_url}/category-list`).then(response => {\n      if (response.status !== 200) return alert(response.data.error);\n      dispatch({\n        type: \"ADD_CATEGORIES\",\n        categories: response.data.categories\n      });\n      return;\n    }).catch(error => alert(error.message));\n  }; ////======================================\n  ////======================================\n\n\n  const get_carts_and_orders = (user, token) => {\n    axios.post(`${auth_base_url}/get-carts-and-orders`, {\n      token\n    }).then(response => {\n      if (response.status !== 200) return alert(response.data.error);\n      dispatch({\n        type: \"ADD_TOKEN\",\n        token\n      });\n      dispatch({\n        type: \"ADD_USER\",\n        user: JSON.parse(user)\n      });\n      dispatch({\n        type: \"ADD_CARTS\",\n        carts: response.data.carts\n      });\n      dispatch({\n        type: \"ADD_ORDER\",\n        order: response.data.order\n      });\n      return navigate(-1);\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  const add_to_cart = async food_id => {\n    if (state.order) return alert(`You have a order to ${state.order.type} first.Please try again letter!`);\n    const cart_exist = state.carts.filter(cart => cart.food_id == food_id);\n    if (cart_exist.length > 0) return alert(\"cart already added!\");\n    const {\n      data\n    } = await axios.post(`${cart_base_url}/create-cart`, {\n      food_id,\n      token: state.token\n    });\n    if (!data.cart) return alert(\"can't add to cart! please try again letter!\");\n    dispatch({\n      type: \"ADD_TO_CARTS\",\n      cart: data.cart\n    });\n    return;\n  }; ////======================================\n  ////======================================\n\n\n  const change_quantity = (value, cart, index) => {\n    if (value < 1) return;\n    const carts = state.carts;\n    axios.post(`${cart_base_url}/change-quantity`, {\n      value,\n      cart_id: cart._id,\n      token: state.token\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (!data.cart_updated) return alert(\"Cart quantity doesn't update!Please try again!\");\n      carts[index].quantity = value;\n      dispatch({\n        type: \"CHANGE_CART_QUANTITY\",\n        carts\n      });\n      return;\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  const remove_cart = cart_id => {\n    axios.post(`${cart_base_url}/remove-cart`, {\n      cart_id,\n      token: state.token\n    }).then(response => {\n      if (response.status !== 200) return alert(\"Cart  doesn't deleted ! Please try again!\");\n      const carts = state.carts.filter(cart => cart._id != cart_id);\n      return dispatch({\n        type: \"REMOVE_FROM_CARTS\",\n        carts\n      });\n    }).catch(error => alert(error.message));\n  }; ////======================================\n  ////======================================\n\n\n  const delete_user_carts = () => {\n    axios.post(`${cart_base_url}/delete-user-carts`, {\n      token: state.token\n    }).then(response => {\n      if (response.status == 200) return navigate(\"/\");\n      return alert(\"Can't delete carts.. Please try again letter!\");\n    }).catch();\n  }; ////======================================\n  ////======================================\n\n\n  const confirm_order = (date_time, type, price) => {\n    if (!date_time) return alert(\"Please give date and time\");\n    axios.post(`${order_base_url}/create-order`, {\n      carts: state.carts,\n      date_time,\n      type,\n      price,\n      token: state.token,\n      user_name: state.user.name\n    }).then(response => {\n      if (response.status != 200) return alert(\"cant create order.Please try again letter!\");\n      dispatch({\n        type: \"ADD_ORDER\",\n        order: response.data.order\n      });\n      dispatch({\n        type: \"DELETE_CARTS\"\n      });\n      return navigate(\"/\");\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  return {\n    get_carts_and_orders,\n    get_category_list,\n    login,\n    signup,\n    logout,\n    add_to_cart,\n    change_quantity,\n    remove_cart,\n    delete_user_carts,\n    confirm_order\n  };\n}\n\n_s(useMethods, \"Y9CzdkAdpfCTXAlzqbhzxeemAUo=\", false, function () {\n  return [useStateValue, useNavigate];\n});\n\nexport default useMethods;","map":{"version":3,"sources":["/home/asif/Desktop/cafe_club/client/src/StateProvider/useMethods.jsx"],"names":["axios","useNavigate","useStateValue","useMethods","owner_base_url","auth_base_url","cart_base_url","category_base_url","order_base_url","state","dispatch","navigate","login","data","pathname","email","password","post","then","response","token","alert","user","carts","order","type","sessionStorage","setItem","JSON","stringify","owner","orders","owner_token","catch","error","signup","status","message","logout","clear","get_category_list","get","categories","get_carts_and_orders","parse","add_to_cart","food_id","cart_exist","filter","cart","length","change_quantity","value","index","cart_id","_id","cart_updated","quantity","remove_cart","delete_user_carts","confirm_order","date_time","price","user_name","name"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useStateValue } from \"./StateContext\";\n\nfunction useMethods() {\n  const owner_base_url = \"http://localhost:8000/owner\";\n  const auth_base_url = \"http://localhost:8000/auth\";\n  const cart_base_url = \"http://localhost:8000/cart\";\n  const category_base_url = \"http://localhost:8000/category\";\n  const order_base_url = \"http://localhost:8000/order\";\n  const [state, dispatch] = useStateValue();\n  const navigate = useNavigate();\n  ////======================================\n  ////======================================\n  const login = (data, pathname) => {\n    const { email, password } = data;\n    axios\n      .post(\n        pathname == \"/login\"\n          ? `${auth_base_url}/login`\n          : `${owner_base_url}/owner-login`,\n        { email, password }\n      )\n      .then((response) => {\n        if (!response.data.token) return alert(\"Password doesn't match!\");\n        if (pathname == \"/login\") {\n          const { user, token, carts, order } = response.data;\n          dispatch({ type: \"ADD_USER\", user });\n          dispatch({ type: \"ADD_TOKEN\", token });\n          dispatch({ type: \"ADD_CARTS\", carts });\n          dispatch({ type: \"ADD_ORDER\", order });\n          sessionStorage.setItem(\"user\", JSON.stringify(user));\n          sessionStorage.setItem(\"token\", token);\n          return navigate(\"/\");\n        } else {\n          const { token, owner, orders } = response.data;\n          dispatch({ type: \"ADD_OWNER\", owner: { ...owner, orders } });\n          dispatch({ type: \"ADD_OWNER_TOKEN\", owner_token: token });\n          sessionStorage.setItem(\"owner\", JSON.stringify(owner));\n          sessionStorage.setItem(\"owner_token\", token);\n          return navigate(\"/owner-dashboard\");\n        }\n      })\n      .catch((error) => {\n        return alert(error);\n      });\n  };\n  ////======================================\n  ////======================================\n  const signup = (data) => {\n    axios\n      .post(`${auth_base_url}/signup`, { ...data })\n      .then((response) => {\n        if (response.status !== 200)\n          return alert(response.data?.message || response.data?.error);\n        navigate(\"/login\");\n        return;\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  const logout = () => {\n    dispatch({ type: \"DELETE_EVERYTHING\" });\n    sessionStorage.clear();\n    return navigate(\"/\");\n  };\n  ////======================================\n  ////======================================\n  const get_category_list = () => {\n    axios\n      .get(`${category_base_url}/category-list`)\n      .then((response) => {\n        if (response.status !== 200) return alert(response.data.error);\n        dispatch({\n          type: \"ADD_CATEGORIES\",\n          categories: response.data.categories,\n        });\n        return;\n      })\n      .catch((error) => alert(error.message));\n  };\n  ////======================================\n  ////======================================\n  const get_carts_and_orders = (user, token) => {\n    axios\n      .post(`${auth_base_url}/get-carts-and-orders`, { token })\n      .then((response) => {\n        if (response.status !== 200) return alert(response.data.error);\n        dispatch({ type: \"ADD_TOKEN\", token });\n        dispatch({ type: \"ADD_USER\", user: JSON.parse(user) });\n        dispatch({ type: \"ADD_CARTS\", carts: response.data.carts });\n        dispatch({ type: \"ADD_ORDER\", order: response.data.order });\n        return navigate(-1);\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  const add_to_cart = async (food_id) => {\n    if (state.order)\n      return alert(\n        `You have a order to ${state.order.type} first.Please try again letter!`\n      );\n    const cart_exist = state.carts.filter((cart) => cart.food_id == food_id);\n    if (cart_exist.length > 0) return alert(\"cart already added!\");\n    const { data } = await axios.post(`${cart_base_url}/create-cart`, {\n      food_id,\n      token: state.token,\n    });\n    if (!data.cart) return alert(\"can't add to cart! please try again letter!\");\n    dispatch({ type: \"ADD_TO_CARTS\", cart: data.cart });\n    return;\n  };\n  ////======================================\n  ////======================================\n  const change_quantity = (value, cart, index) => {\n    if (value < 1) return;\n    const carts = state.carts;\n    axios\n      .post(`${cart_base_url}/change-quantity`, {\n        value,\n        cart_id: cart._id,\n        token: state.token,\n      })\n      .then(({ data }) => {\n        if (!data.cart_updated)\n          return alert(\"Cart quantity doesn't update!Please try again!\");\n        carts[index].quantity = value;\n        dispatch({\n          type: \"CHANGE_CART_QUANTITY\",\n          carts,\n        });\n        return;\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  const remove_cart = (cart_id) => {\n    axios\n      .post(`${cart_base_url}/remove-cart`, { cart_id, token: state.token })\n      .then((response) => {\n        if (response.status !== 200)\n          return alert(\"Cart  doesn't deleted ! Please try again!\");\n        const carts = state.carts.filter((cart) => cart._id != cart_id);\n        return dispatch({ type: \"REMOVE_FROM_CARTS\", carts });\n      })\n      .catch((error) => alert(error.message));\n  };\n  ////======================================\n  ////======================================\n  const delete_user_carts = () => {\n    axios\n      .post(`${cart_base_url}/delete-user-carts`, {\n        token: state.token,\n      })\n      .then((response) => {\n        if (response.status == 200) return navigate(\"/\");\n        return alert(\"Can't delete carts.. Please try again letter!\");\n      })\n      .catch();\n  };\n  ////======================================\n  ////======================================\n\n  const confirm_order = (date_time, type, price) => {\n    if (!date_time) return alert(\"Please give date and time\");\n\n    axios\n      .post(`${order_base_url}/create-order`, {\n        carts: state.carts,\n        date_time,\n        type,\n        price,\n        token: state.token,\n        user_name: state.user.name,\n      })\n      .then((response) => {\n        if (response.status != 200)\n          return alert(\"cant create order.Please try again letter!\");\n        dispatch({ type: \"ADD_ORDER\", order: response.data.order });\n        dispatch({ type: \"DELETE_CARTS\" });\n        return navigate(\"/\");\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  return {\n    get_carts_and_orders,\n    get_category_list,\n    login,\n    signup,\n    logout,\n    add_to_cart,\n    change_quantity,\n    remove_cart,\n    delete_user_carts,\n    confirm_order,\n  };\n}\n\nexport default useMethods;\n"]},"metadata":{},"sourceType":"module"}